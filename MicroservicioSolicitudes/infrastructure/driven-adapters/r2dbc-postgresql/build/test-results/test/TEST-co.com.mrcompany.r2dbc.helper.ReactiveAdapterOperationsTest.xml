<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="co.com.mrcompany.r2dbc.helper.ReactiveAdapterOperationsTest" tests="4" skipped="0" failures="4" errors="0" timestamp="2025-09-02T17:41:47.111Z" hostname="DESKTOP-TOJ04LP" time="1.732">
  <properties/>
  <testcase name="findAll()" classname="co.com.mrcompany.r2dbc.helper.ReactiveAdapterOperationsTest" time="1.7">
    <failure message="java.lang.NullPointerException: Cannot invoke &quot;org.springframework.transaction.reactive.TransactionalOperator.transactional(reactor.core.publisher.Flux)&quot; because &quot;this.transactionalOperator&quot; is null" type="java.lang.NullPointerException">java.lang.NullPointerException: Cannot invoke &quot;org.springframework.transaction.reactive.TransactionalOperator.transactional(reactor.core.publisher.Flux)&quot; because &quot;this.transactionalOperator&quot; is null
	at co.com.mrcompany.r2dbc.helper.ReactiveAdapterOperationsTest.findAll(ReactiveAdapterOperationsTest.java:116)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
</failure>
  </testcase>
  <testcase name="findById()" classname="co.com.mrcompany.r2dbc.helper.ReactiveAdapterOperationsTest" time="0.02">
    <failure message="org.mockito.exceptions.misusing.InvalidUseOfMatchersException: &#10;Misplaced or misused argument matcher detected here:&#10;&#10;-&gt; at co.com.mrcompany.r2dbc.helper.ReactiveAdapterOperationsTest.findAll(ReactiveAdapterOperationsTest.java:116)&#10;&#10;You cannot use argument matchers outside of verification or stubbing.&#10;Examples of correct usage of argument matchers:&#10;    when(mock.get(anyInt())).thenReturn(null);&#10;    doThrow(new RuntimeException()).when(mock).someVoidMethod(any());&#10;    verify(mock).someMethod(contains(&quot;foo&quot;))&#10;&#10;This message may appear after an NullPointerException if the last matcher is returning an object &#10;like any() but the stubbed method signature expect a primitive argument, in this case,&#10;use primitive alternatives.&#10;    when(mock.get(any())); // bad use, will raise NPE&#10;    when(mock.get(anyInt())); // correct usage use&#10;&#10;Also, this error might show up because you use argument matchers with methods that cannot be mocked.&#10;Following methods *cannot* be stubbed/verified: final/private/equals()/hashCode().&#10;Mocking methods declared on non-public parent classes is not supported.&#10;" type="org.mockito.exceptions.misusing.InvalidUseOfMatchersException">org.mockito.exceptions.misusing.InvalidUseOfMatchersException: 
Misplaced or misused argument matcher detected here:

-&gt; at co.com.mrcompany.r2dbc.helper.ReactiveAdapterOperationsTest.findAll(ReactiveAdapterOperationsTest.java:116)

You cannot use argument matchers outside of verification or stubbing.
Examples of correct usage of argument matchers:
    when(mock.get(anyInt())).thenReturn(null);
    doThrow(new RuntimeException()).when(mock).someVoidMethod(any());
    verify(mock).someMethod(contains(&quot;foo&quot;))

This message may appear after an NullPointerException if the last matcher is returning an object 
like any() but the stubbed method signature expect a primitive argument, in this case,
use primitive alternatives.
    when(mock.get(any())); // bad use, will raise NPE
    when(mock.get(anyInt())); // correct usage use

Also, this error might show up because you use argument matchers with methods that cannot be mocked.
Following methods *cannot* be stubbed/verified: final/private/equals()/hashCode().
Mocking methods declared on non-public parent classes is not supported.

	at app//co.com.mrcompany.r2dbc.helper.ReactiveAdapterOperationsTest.setUp(ReactiveAdapterOperationsTest.java:46)
	at java.base@21.0.8/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base@21.0.8/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base@21.0.8/java.util.ArrayList.forEach(ArrayList.java:1596)
</failure>
  </testcase>
  <testcase name="saveAllEntities()" classname="co.com.mrcompany.r2dbc.helper.ReactiveAdapterOperationsTest" time="0.005">
    <failure message="java.lang.NullPointerException: Cannot invoke &quot;org.springframework.transaction.reactive.TransactionalOperator.transactional(reactor.core.publisher.Flux)&quot; because &quot;this.transactionalOperator&quot; is null" type="java.lang.NullPointerException">java.lang.NullPointerException: Cannot invoke &quot;org.springframework.transaction.reactive.TransactionalOperator.transactional(reactor.core.publisher.Flux)&quot; because &quot;this.transactionalOperator&quot; is null
	at co.com.mrcompany.r2dbc.helper.ReactiveAdapterOperationsTest.saveAllEntities(ReactiveAdapterOperationsTest.java:88)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
</failure>
  </testcase>
  <testcase name="save()" classname="co.com.mrcompany.r2dbc.helper.ReactiveAdapterOperationsTest" time="0.003">
    <failure message="org.mockito.exceptions.misusing.InvalidUseOfMatchersException: &#10;Misplaced or misused argument matcher detected here:&#10;&#10;-&gt; at co.com.mrcompany.r2dbc.helper.ReactiveAdapterOperationsTest.saveAllEntities(ReactiveAdapterOperationsTest.java:88)&#10;&#10;You cannot use argument matchers outside of verification or stubbing.&#10;Examples of correct usage of argument matchers:&#10;    when(mock.get(anyInt())).thenReturn(null);&#10;    doThrow(new RuntimeException()).when(mock).someVoidMethod(any());&#10;    verify(mock).someMethod(contains(&quot;foo&quot;))&#10;&#10;This message may appear after an NullPointerException if the last matcher is returning an object &#10;like any() but the stubbed method signature expect a primitive argument, in this case,&#10;use primitive alternatives.&#10;    when(mock.get(any())); // bad use, will raise NPE&#10;    when(mock.get(anyInt())); // correct usage use&#10;&#10;Also, this error might show up because you use argument matchers with methods that cannot be mocked.&#10;Following methods *cannot* be stubbed/verified: final/private/equals()/hashCode().&#10;Mocking methods declared on non-public parent classes is not supported.&#10;" type="org.mockito.exceptions.misusing.InvalidUseOfMatchersException">org.mockito.exceptions.misusing.InvalidUseOfMatchersException: 
Misplaced or misused argument matcher detected here:

-&gt; at co.com.mrcompany.r2dbc.helper.ReactiveAdapterOperationsTest.saveAllEntities(ReactiveAdapterOperationsTest.java:88)

You cannot use argument matchers outside of verification or stubbing.
Examples of correct usage of argument matchers:
    when(mock.get(anyInt())).thenReturn(null);
    doThrow(new RuntimeException()).when(mock).someVoidMethod(any());
    verify(mock).someMethod(contains(&quot;foo&quot;))

This message may appear after an NullPointerException if the last matcher is returning an object 
like any() but the stubbed method signature expect a primitive argument, in this case,
use primitive alternatives.
    when(mock.get(any())); // bad use, will raise NPE
    when(mock.get(anyInt())); // correct usage use

Also, this error might show up because you use argument matchers with methods that cannot be mocked.
Following methods *cannot* be stubbed/verified: final/private/equals()/hashCode().
Mocking methods declared on non-public parent classes is not supported.

	at app//co.com.mrcompany.r2dbc.helper.ReactiveAdapterOperationsTest.setUp(ReactiveAdapterOperationsTest.java:46)
	at java.base@21.0.8/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base@21.0.8/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base@21.0.8/java.util.ArrayList.forEach(ArrayList.java:1596)
</failure>
  </testcase>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
